(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{620:function(s,t,a){s.exports=a.p+"assets/img/328_fig1.f831659d.png"},794:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://leetcode-cn.com/leetbook/detail/top-interview-questions-medium/",target:"_blank",rel:"noopener noreferrer"}},[s._v("leetcode 中级算法"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/odd-even-linked-list/description/",target:"_blank",rel:"noopener noreferrer"}},[s._v("奇偶链表"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"奇偶链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#奇偶链表"}},[s._v("#")]),s._v(" 奇偶链表")]),s._v(" "),e("p",[s._v("给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。")]),s._v(" "),e("p",[s._v("请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。")]),s._v(" "),e("h3",{attrs:{id:"示例-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例-1"}},[s._v("#")]),s._v(" 示例 1:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("输入: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("NULL\n输出: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("NULL\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"示例-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[s._v("#")]),s._v(" 示例 2:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("输入: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("NULL \n输出: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("NULL\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[s._v("#")]),s._v(" 说明:")]),s._v(" "),e("ul",[e("li",[s._v("应当保持奇数节点和偶数节点的相对顺序。")]),s._v(" "),e("li",[s._v("链表的第一个节点视为奇数节点，第二个节点视为偶数节点，以此类推。")])]),s._v(" "),e("h2",{attrs:{id:"方法一-分离节点后合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法一-分离节点后合并"}},[s._v("#")]),s._v(" 方法一：分离节点后合并")]),s._v(" "),e("p",[s._v("如果链表为空，则直接返回链表。")]),s._v(" "),e("p",[s._v("对于原始链表，每个节点都是奇数节点或偶数节点。头节点是奇数节点，头节点的后一个节点是偶数节点，相邻节点的奇偶性不同。因此可以将奇数节点和偶数节点分离成奇数链表和偶数链表，然后将偶数链表连接在奇数链表之后，合并后的链表即为结果链表。")]),s._v(" "),e("p",[s._v("原始链表的头节点 "),e("code",[s._v("head")]),s._v(" 也是奇数链表的头节点以及结果链表的头节点，"),e("code",[s._v("head")]),s._v(" 的后一个节点是偶数链表的头节点。令 "),e("code",[s._v("evenHead = head.next")]),s._v("，则 "),e("code",[s._v("evenHead")]),s._v(" 是偶数链表的头节点。")]),s._v(" "),e("p",[s._v("维护两个指针 "),e("code",[s._v("odd")]),s._v(" 和 "),e("code",[s._v("even")]),s._v(" 分别指向奇数节点和偶数节点，初始时 "),e("code",[s._v("odd = head")]),s._v("，"),e("code",[s._v("even = evenHead")]),s._v("。通过迭代的方式将奇数节点和偶数节点分离成两个链表，每一步首先更新奇数节点，然后更新偶数节点。")]),s._v(" "),e("ul",[e("li",[s._v("更新奇数节点时，奇数节点的后一个节点需要指向偶数节点的后一个节点，因此令 "),e("code",[s._v("odd.next = even.next")]),s._v("，然后令 "),e("code",[s._v("odd = odd.next")]),s._v("，此时 "),e("code",[s._v("odd")]),s._v(" 变成 "),e("code",[s._v("even")]),s._v(" 的后一个节点。")]),s._v(" "),e("li",[s._v("更新偶数节点时，偶数节点的后一个节点需要指向奇数节点的后一个节点，因此令 "),e("code",[s._v("even.next = odd.next")]),s._v("，然后令 "),e("code",[s._v("even = even.next")]),s._v("，此时 "),e("code",[s._v("even")]),s._v(" 变成 "),e("code",[s._v("odd")]),s._v(" 的后一个节点。")])]),s._v(" "),e("p",[s._v("在上述操作之后，即完成了对一个奇数节点和一个偶数节点的分离。重复上述操作，直到全部节点分离完毕。全部节点分离完毕的条件是 "),e("code",[s._v("even")]),s._v(" 为空节点或者 "),e("code",[s._v("even.next")]),s._v(" 为空节点，此时 "),e("code",[s._v("odd")]),s._v(" 指向最后一个奇数节点（即奇数链表的最后一个节点）。")]),s._v(" "),e("p",[s._v("最后令 "),e("code",[s._v("odd.next = evenHead")]),s._v("，将偶数链表连接在奇数链表之后，即完成了奇数链表和偶数链表的合并，结果链表的头节点仍然是 head。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(620),alt:""}})]),s._v(" "),e("h3",{attrs:{id:"代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[s._v("#")]),s._v(" 代码")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("oddEvenList")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("head")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("head "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" head\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" evenHead "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" odd "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("even "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" evenHead"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("even "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" even"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        odd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" even"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next\n        odd "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" odd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next\n        even"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" odd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next\n        even "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" even"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    odd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" evenHead\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" head"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h3",{attrs:{id:"复杂度分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[s._v("#")]),s._v(" 复杂度分析")]),s._v(" "),e("ul",[e("li",[s._v("时间复杂度：O(n)，其中 n 是链表的节点数。需要遍历链表中的每个节点，并更新指针。")]),s._v(" "),e("li",[s._v("空间复杂度：O(1)。只需要维护有限的指针。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);