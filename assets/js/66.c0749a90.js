(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{621:function(t,e,s){"use strict";s.r(e);var a=s(5),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/haizlin/fe-interview/blob/master/category/history.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端面试每日 3+1"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/blob/master/datum/summary.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Daily-Interview-Question"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.doyoe.com/2015/03/15/css/%E7%BD%AE%E6%8D%A2%E5%92%8C%E9%9D%9E%E7%BD%AE%E6%8D%A2%E5%85%83%E7%B4%A0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("置换和非置换元素 doyoe"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://xiangshuo.blog.csdn.net/article/details/89843456",target:"_blank",rel:"noopener noreferrer"}},[t._v("属性content有什么作用呢？有哪些场景可以用到？ 前端向朔"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://zh.javascript.info/dom-attributes-and-properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("特性和属性（Attributes and properties） 现代 JavaScript 教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/22#issue-414168211",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm模块的安装 瓶子君的答案"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"html-说说你对html中的置换元素和非置换元素的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-说说你对html中的置换元素和非置换元素的理解"}},[t._v("#")]),t._v(" [html] 说说你对html中的置换元素和非置换元素的理解")]),t._v(" "),s("h3",{attrs:{id:"什么是置换元素？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是置换元素？"}},[t._v("#")]),t._v(" 什么是置换元素？")]),t._v(" "),s("p",[t._v("一个 "),s("strong",[t._v("内容")]),t._v(" 不受CSS视觉格式化模型控制，CSS渲染模型并不考虑对此内容的渲染，且元素本身一般拥有固有尺寸（宽度，高度，宽高比）的元素，被称之为置换元素。")]),t._v(" "),s("p",[t._v("CSS 能对可替换元素产生的唯一影响在于，部分属性支持控制元素内容在其框中的位置或定位方式。")]),t._v(" "),s("h3",{attrs:{id:"什么是非置换元素？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是非置换元素？"}},[t._v("#")]),t._v(" 什么是非置换元素？")]),t._v(" "),s("p",[t._v("w3c并没有给出明确的非置换元素的解释，但能确定的是除置换元素之外，所有的元素都是非置换元素。")]),t._v(" "),s("h3",{attrs:{id:"行内级置换和非置换元素的宽度定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内级置换和非置换元素的宽度定义"}},[t._v("#")]),t._v(" 行内级置换和非置换元素的宽度定义")]),t._v(" "),s("p",[t._v("对于行内级非置换元素，宽度设置是不适用的。")]),t._v(" "),s("p",[t._v("对于行内级置换元素来说，其宽度的设置需遵循以下几点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("若宽高的计算值都为 auto 且元素有固有宽度，则 width 的使用值为该固有宽度；")]),t._v(" "),s("blockquote",[s("p",[t._v("典型的例子是：拥有默认宽高的 input 当宽度的计算值为auto时，则宽度使用值为其默认的固有宽度")])])]),t._v(" "),s("li",[s("p",[t._v("若宽度的计算值为 auto 且元素有固有宽度，则 width 的使用值为该固有宽度；")]),t._v(" "),s("blockquote",[s("p",[t._v("例子同上")])])]),t._v(" "),s("li",[s("p",[t._v("若宽度的计算值为 auto 且高度有 非auto 的计算值，并且元素有固有宽高比，则 width 的使用值为 "),s("code",[t._v("高度使用值 * 固有宽高比")]),t._v("；")]),t._v(" "),s("blockquote",[s("p",[t._v("典型的例子：img 当只定义了其高度值时，其宽度将会根据固有宽高比进行等比设置")])])]),t._v(" "),s("li",[s("p",[t._v("除此之外，当 "),s("code",[t._v("width")]),t._v(" 的计算值为 auto 时，则宽度的使用值为 300px")]),t._v(" "),s("blockquote",[s("p",[t._v("典型的例子：比如iframe, canvas")])])])]),t._v(" "),s("p",[t._v("其它类型的置换元素，其宽度的定义都参照行内置换元素的定义。")]),t._v(" "),s("h3",{attrs:{id:"行内级置换和非置换元素的高度定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内级置换和非置换元素的高度定义"}},[t._v("#")]),t._v(" 行内级置换和非置换元素的高度定义")]),t._v(" "),s("p",[t._v("对于行内级非置换元素，高度设置是不适用的。")]),t._v(" "),s("p",[t._v("对于行内级置换元素来说，其高度的设置需遵循以下几点：")]),t._v(" "),s("ul",[s("li",[t._v("若宽高的计算值都为 "),s("code",[t._v("auto")]),t._v(" 且元素有固有高度，则 height 的使用值为该固有高度；")]),t._v(" "),s("li",[t._v("若高度的计算值为 "),s("code",[t._v("auto")]),t._v(" 且元素有固有高度，则 height 的使用值为该固有高度；")]),t._v(" "),s("li",[t._v("若高度的计算值为 "),s("code",[t._v("auto")]),t._v(" 且宽度有 非auto 的计算值，并且元素有固有宽高比，则 height 的使用值为：宽度使用值 / 固有宽高比；")]),t._v(" "),s("li",[t._v("若高度的计算值为 "),s("code",[t._v("auto")]),t._v(" 且上述条件完全不符，则 height 的使用值 不能大于150px，且宽度不能大于长方形高度的2倍。")])]),t._v(" "),s("p",[t._v("其它类型的置换元素，其高度的定义都参照行内置换元素的定义。")]),t._v(" "),s("h2",{attrs:{id:"css-css的属性content有什么作用呢？有哪些场景可以用到？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-css的属性content有什么作用呢？有哪些场景可以用到？"}},[t._v("#")]),t._v(" [css] css的属性content有什么作用呢？有哪些场景可以用到？")]),t._v(" "),s("h3",{attrs:{id:"认识-before和-after"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认识-before和-after"}},[t._v("#")]),t._v(" 认识 "),s("code",[t._v(":before")]),t._v("和 "),s("code",[t._v(":after")])]),t._v(" "),s("ul",[s("li",[t._v("默认 "),s("code",[t._v("display: inline")]),t._v("；")]),t._v(" "),s("li",[t._v("必须设置 "),s("code",[t._v("content")]),t._v(" 属性，否则一切都是无用功， "),s("code",[t._v("content")]),t._v(" 属性也只能应用在 "),s("code",[t._v(":before")]),t._v(" 和 "),s("code",[t._v(":after")]),t._v(" 伪元素上；")]),t._v(" "),s("li",[t._v("默认"),s("code",[t._v("user-select: none")]),t._v("，就是 "),s("code",[t._v(":before")]),t._v(" 和 "),s("code",[t._v(":after")]),t._v(" 的内容无法被用户选中；")]),t._v(" "),s("li",[t._v("伪元素可以和伪类结合使用形如："),s("code",[t._v(".target:hover:after")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v(":before")]),t._v(" 和 "),s("code",[t._v(":after")]),t._v(" 是在CSS2中提出来的，所以兼容IE8；")]),t._v(" "),s("li",[s("code",[t._v("::before")]),t._v(" 和 "),s("code",[t._v("::after")]),t._v(" 是CSS3中的写法，为了将伪类和伪元素区分开；")]),t._v(" "),s("li",[t._v("CSS 中其他的伪元素有："),s("code",[t._v("::before")]),t._v("、"),s("code",[t._v("::after")]),t._v("、"),s("code",[t._v("::first-letter")]),t._v("、"),s("code",[t._v("::first-line")]),t._v("、"),s("code",[t._v("::selection")]),t._v(" 等；")]),t._v(" "),s("li",[t._v("不可通过DOM使用，它只是纯粹的表象。在特殊情况下，从一个访问的角度来看，当前屏幕阅读不支持生成的内容。")])]),t._v(" "),s("h3",{attrs:{id:"content-定义用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#content-定义用法"}},[t._v("#")]),t._v(" content 定义用法")]),t._v(" "),s("p",[s("code",[t._v("content")]),t._v(" 属性与 "),s("code",[t._v(":before")]),t._v(" 及 "),s("code",[t._v(":after")]),t._v(" 伪元素配合使用，在元素头或尾部来插入生成内容。")]),t._v(" "),s("p",[t._v("说明： 该属性用于定义元素之前或之后放置的生成内容。默认地，这往往是行内内容，不过该内容创建的盒子类型可以用属性 display 控制。")]),t._v(" "),s("p",[t._v("MDN 对 content 的取值描述：")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" normal                                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Keywords that cannot be combined with other values */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prefix'")]),t._v("                              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* <string> value, non-latin characters must be encoded e.g. \\00A0 for &nbsp; */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http://www.example.com/test.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* <uri> value */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" chapter_counter                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* <counter> values */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("attr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* attr() value linked to the HTML attribute value */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" open-quote                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Language- and position-dependant keywords */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" close-quote\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no-open-quote\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no-close-quote\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" open-quote chapter_counter            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Except for normal and none, several values can be used simultaneously */")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inherit\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h2",{attrs:{id:"js-attribute-和-property-有什么不同？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-attribute-和-property-有什么不同？"}},[t._v("#")]),t._v(' [js] "attribute"和"property"有什么不同？')]),t._v(" "),s("p",[t._v("当浏览器加载页面时，它会“读取”（或者称之为：“解析”）HTML 并从中生成 DOM 对象。对于元素节点，大多数标准的 HTML 特性（attributes）会自动变成 DOM 对象的属性（properties）。")]),t._v(" "),s("ul",[s("li",[t._v("特性（attribute）— 写在 HTML 中的内容。")]),t._v(" "),s("li",[t._v("属性（property）— DOM 对象中的内容。")])]),t._v(" "),s("p",[t._v("简略的对比：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("p")]),t._v(" "),s("th",[t._v("属性(property)")]),t._v(" "),s("th",[t._v("特性(attribute)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("类型")]),t._v(" "),s("td",[t._v("任何值，标准的属性具有规范中描述的类型")]),t._v(" "),s("td",[t._v("字符串")])]),t._v(" "),s("tr",[s("td",[t._v("名字")]),t._v(" "),s("td",[t._v("名字（name）是大小写敏感的")]),t._v(" "),s("td",[t._v("名字（name）是大小写不敏感的")])])])]),t._v(" "),s("p",[t._v("操作特性的方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("elem.hasAttribute(name)")]),t._v(" — 检查是否存在这个特性。")]),t._v(" "),s("li",[s("code",[t._v("elem.getAttribute(name)")]),t._v(" — 获取这个特性值。")]),t._v(" "),s("li",[s("code",[t._v("elem.setAttribute(name, value)")]),t._v(" — 设置这个特性值。")]),t._v(" "),s("li",[s("code",[t._v("elem.removeAttribute(name)")]),t._v(" — 移除这个特性。")]),t._v(" "),s("li",[s("code",[t._v("elem.attributes")]),t._v(" — 所有特性的集合。")])]),t._v(" "),s("p",[t._v("在大多数情况下，最好使用 DOM 属性。仅当 "),s("code",[t._v("DOM")]),t._v(" 属性无法满足开发需求，并且我们真的需要特性时，才使用特性，例如：")]),t._v(" "),s("ul",[s("li",[t._v("我们需要一个非标准的特性。但是如果它以 "),s("code",[t._v("data-")]),t._v(" 开头，那么我们应该使用 "),s("code",[t._v("dataset")]),t._v("。")]),t._v(" "),s("li",[t._v("我们想要读取 HTML 中“所写的”值。对应的 DOM 属性可能不同，例如 "),s("code",[t._v("href")]),t._v(" 属性一直是一个 "),s("strong",[t._v("完整的")]),t._v(" URL，但是我们想要的是“原始的”值。")])]),t._v(" "),s("h2",{attrs:{id:"介绍下-npm-模块安装机制，为什么输入-npm-install-就可以自动安装对应的模块？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍下-npm-模块安装机制，为什么输入-npm-install-就可以自动安装对应的模块？"}},[t._v("#")]),t._v(" 介绍下 npm 模块安装机制，为什么输入 npm install 就可以自动安装对应的模块？")]),t._v(" "),s("h3",{attrs:{id:"_1-npm-模块安装机制："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-npm-模块安装机制："}},[t._v("#")]),t._v(" 1. npm 模块安装机制：")]),t._v(" "),s("ul",[s("li",[t._v("发出npm install命令")]),t._v(" "),s("li",[t._v("查询node_modules目录之中是否已经存在指定模块\n"),s("ul",[s("li",[t._v("若存在，不再重新安装")]),t._v(" "),s("li",[t._v("若不存在\n"),s("ul",[s("li",[t._v("npm 向 registry 查询模块压缩包的网址")]),t._v(" "),s("li",[t._v("下载压缩包，存放在根目录下的"),s("code",[t._v(".npm")]),t._v("目录里")]),t._v(" "),s("li",[t._v("解压压缩包到当前项目的"),s("code",[t._v("node_modules")]),t._v("目录")])])])])])]),t._v(" "),s("h3",{attrs:{id:"_2-npm-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-npm-实现原理"}},[t._v("#")]),t._v(" 2. npm 实现原理")]),t._v(" "),s("p",[t._v("输入 "),s("code",[t._v("npm install")]),t._v(" 命令并敲下回车后，会经历如下几个阶段（以 npm 5.5.1 为例）：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("执行工程自身 "),s("code",[t._v("preinstall")])]),t._v(" "),s("p",[t._v("当前 npm 工程如果定义了 "),s("code",[t._v("preinstall")]),t._v(" 钩子此时会被执行。")])]),t._v(" "),s("li",[s("p",[t._v("确定首层依赖模块")]),t._v(" "),s("p",[t._v("首先需要做的是确定工程中的首层依赖，也就是 "),s("code",[t._v("dependencies")]),t._v(" 和 "),s("code",[t._v("devDependencies")]),t._v(" 属性中直接指定的模块（假设此时没有添加 "),s("code",[t._v("npm install")]),t._v(" 参数）。")]),t._v(" "),s("p",[t._v("工程本身是整棵依赖树的根节点，每个首层依赖模块都是根节点下面的一棵子树，"),s("code",[t._v("npm")]),t._v(" 会开启多进程从每个首层依赖模块开始逐步寻找更深层级的节点。")])]),t._v(" "),s("li",[s("p",[t._v("获取模块")]),t._v(" "),s("p",[t._v("获取模块是一个递归的过程，分为以下几步：")]),t._v(" "),s("ul",[s("li",[t._v("获取模块信息。在下载一个模块之前，首先要确定其版本，这是因为 package.json 中往往是 semantic version（semver，语义化版本）。此时如果版本描述文件（npm-shrinkwrap.json 或 package-lock.json）中有该模块信息直接拿即可，如果没有则从仓库获取。如 packaeg.json 中某个包的版本是 ^1.1.0，npm 就会去仓库中获取符合 1.x.x 形式的最新版本。")]),t._v(" "),s("li",[t._v("获取模块实体。上一步会获取到模块的压缩包地址（resolved 字段），npm 会用此地址检查本地缓存，缓存中有就直接拿，如果没有则从仓库下载。")]),t._v(" "),s("li",[t._v("查找该模块依赖，如果有依赖则回到第1步，如果没有则停止")])])]),t._v(" "),s("li",[s("p",[t._v("模块扁平化（dedupe）")]),t._v(" "),s("p",[t._v("上一步获取到的是一棵完整的依赖树，其中可能包含大量重复模块。比如 A 模块依赖于 "),s("code",[t._v("loadsh")]),t._v("，B 模块同样依赖于 lodash。在 "),s("code",[t._v("npm3")]),t._v(" 以前会严格按照依赖树的结构进行安装，因此会造成模块冗余。")]),t._v(" "),s("p",[t._v("从 npm3 开始默认加入了一个 "),s("code",[t._v("dedupe")]),t._v(" 的过程。它会遍历所有节点，逐个将模块放在根节点下面，也就是 "),s("code",[t._v("node-modules")]),t._v(" 的第一层。当发现有重复模块时，则将其丢弃。")]),t._v(" "),s("p",[t._v("这里需要对"),s("strong",[t._v("重复模块")]),t._v("进行一个定义，它指的是"),s("strong",[t._v("模块名")]),t._v("相同且 "),s("strong",[t._v("semver 兼容")]),t._v("。"),s("strong",[t._v("每个 semver 都对应一段版本允许范围，如果两个模块的版本允许范围存在交集，那么就可以得到一个兼容")]),t._v("版本，而不必版本号完全一致，这可以使更多冗余模块在 dedupe 过程中被去掉。")]),t._v(" "),s("p",[t._v("比如 node-modules 下 foo 模块依赖 lodash@^1.0.0，bar 模块依赖 lodash@^1.1.0，则 ^1.1.0 为兼容版本。")]),t._v(" "),s("p",[t._v("而当 foo 依赖 lodash@^2.0.0，bar 依赖 lodash@^1.1.0，则依据 semver 的规则，二者不存在兼容版本。会将一个版本放在 node_modules 中，另一个仍保留在依赖树里。")]),t._v(" "),s("p",[t._v("举个例子，假设一个依赖树原本是这样：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("node_modules\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" foo\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lodash@version1\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" bar\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lodash@version2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("假设 version1 和 version2 是兼容版本，则经过 dedupe 会成为下面的形式：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("node_modules\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" foo\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" bar\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lodash（保留的版本为兼容版本）\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("假设 version1 和 version2 为非兼容版本，则后面的版本保留在依赖树中：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("node_modules\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" foo\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lodash@version1\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" bar\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lodash@version2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("安装模块")]),t._v(" "),s("p",[t._v("这一步将会更新工程中的 "),s("code",[t._v("node_modules")]),t._v("，并执行模块中的生命周期函数（按照 "),s("code",[t._v("preinstall")]),t._v("、"),s("code",[t._v("install")]),t._v("、"),s("code",[t._v("postinstall")]),t._v(" 的顺序）。")])]),t._v(" "),s("li",[s("p",[t._v("执行工程自身生命周期")]),t._v(" "),s("p",[t._v("当前 npm 工程如果定义了钩子此时会被执行（按照 "),s("code",[t._v("install")]),t._v("、"),s("code",[t._v("postinstall")]),t._v("、"),s("code",[t._v("prepublish")]),t._v("、"),s("code",[t._v("prepare")]),t._v(" 的顺序）。")])])]),t._v(" "),s("p",[t._v("最后一步是生成或更新版本描述文件，"),s("code",[t._v("npm install")]),t._v(" 过程完成。")])])}),[],!1,null,null,null);e.default=n.exports}}]);